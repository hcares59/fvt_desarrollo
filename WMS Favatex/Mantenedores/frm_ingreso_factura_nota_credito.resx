<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQNSURBVFhHxZfbTxNbFMb7fxjfTnISNR41RKMhnmi8
        xHgBvCAWkXCHIqIoRCMKFksggII8QCLxQU1MNEQNVhQFCpSWFrBYrKUtlHpMFDBgNMb45HfWmtA5nelu
        ox7Ahx+Z2Wvzfd/MXnumowHwWxEOLiXSn3itdhlxm3hLYJFhD/ZaJgWgg+XELCFNSM3LQ3l1NfQ1NQsK
        a7J20GfeczkHuMsDKTk5cHm9+Prt26LCHuw1H+IuB3jPJ/aREXz68mVJYK/5AO85ALSZmZj5+FHi7cwM
        Jt+9g3+BYU3WDvqwJ3tLAUrKyvDP9DRcfj+c4+MRsTgcsL58KawxNqcT/cPDwloQ9mAv9pQDFNPJq4kJ
        jND6RML84gVSc3ORVVAghVDXB2gs9+RJpGRno2dwMKweCnuxpxyg8Nw5ODyeiPQNDeFoVhZ2JiRIZBw/
        DgutY7BupeOsEyfkujYjAyabTaGhhj3lAPnFxRh2u4X02u1IJsHtcXEK0vPz0U9LwmRSIHU9KS0NJqtV
        qMmwpyLAoMsVRvfAgCS0dc8eIWm0r9N0OmGNSUxNRafFItRWBNCdOQPb6GgYfAVxSUn4e9euX2JvYiI6
        zWahNnsqAnBjieinhkqgObE7dvwU8UeOwEx9INJkFAHyTp+W11OEjeDbuWnbth/iUEoKBmjXiLSCsKci
        QB/t32gM023jZtywZUtUtOnpGKLngUgjlLAAvbTVotHR14f9ycmI2bw5KjznaW+vUCMURYDcoiKYaLtF
        4klPD/bTvHWxsT8Er3+7ySTUCsKeigBdtOVEPO7uRjzthL82bvwp9tEOeNTZKdRkFAFyTp3Cc9qvavgq
        9h0+jFXr1/8Suw8ehLGrS6jNnooAHbRf1YyOjaHo7FmsiIkRUmYwoLyyUlhjCmirOV+/FmorAmTTyRNq
        HBHeyUmU6vX4c+1aBVVXrsDl80nU1NeH1UtKS+Gh/xVpMuz5XwB6iz2m2x0JXyCASvpZ9cfq1RKNzc14
        RS+UYJ2Pm1pa5DrfGQ4eqqGGPeUA3BCPqNmMUeAQ15qacOPmTYySobrOY7fu3EFtQ4M0V10Phb3kJjxA
        T608ejHcMxrRRl0bDb4qJ/WFqMZwjeeIaqGwl448Dx07Bg29zb5zQ7RQ+lutrWhtb8eDjg48fPZsQWFN
        1mYP9uIHEf2u+K45r9dPZRcWov76dTTQOi4F7KWjABcMhinN/ba2/pKLF1FeVYXLdXW4TN29qJBHBTX0
        +YoKPDQaLRqX273GbLXO1jU2ovrqVRho0iWa8H8QfZjoa2thIH32udbcDKvdPuf2eNZIn2YfZmdX+gMB
        h8fnm/J4vZ/GfL7PQWgsIt7x8chMTEj41Pj904E3bxxzc3Or5G/D34lwcOmA5l+I5U/I885GTAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>